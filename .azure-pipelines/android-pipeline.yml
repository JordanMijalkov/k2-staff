# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- development
- master

pool:
  vmImage: ubuntu-latest

name: $(Date:yyyyMMdd)$(Rev:rr)

steps:
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: "ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H"
    sshKeySecureFile: "id_rsa_k2_ci"
  displayName: "Install SSH keys"
  
- task: FlutterInstall@0
  inputs:
    mode: 'auto'
    channel: 'stable'
    version: 'latest'

- task: FlutterCommand@0
  inputs:
    projectDirectory: '.'
    arguments: 'pub get'

- task: FlutterCommand@0
  inputs:
    projectDirectory: '.'
    arguments: 'pub run intl_utils:generate'

- task: FlutterBuild@0
  inputs:
    target: 'aab'
    projectDirectory: '.'
    debugMode: false
    buildNumber: '$(Build.BuildNumber)'

- task: AndroidSigning@3
  inputs:
    apkFiles: '**/*.aab'
    apksignerKeystoreFile: 'android.keystore'
    apksignerKeystorePassword: 'BbjCx71IEWX2QQwsGsEv'
    apksignerKeystoreAlias: 'kt-key'
    apksignerKeyPassword: 'BbjCx71IEWX2QQwsGsEv'
    apksignerArguments: '--verbose --min-sdk-version 21'

# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '/home/vsts/work/1/s/build/app/outputs/bundle/release/'
#     publishLocation: 'pipeline'

- task: GooglePlayRelease@4
  inputs:
    serviceConnection: 'Google Play Store'
    applicationId: 'com.kangarootime.k2.workforce'
    action: 'SingleBundle'
    bundleFile: '**/*.aab'
    track: 'alpha'
    #changesNotSentForReview : true

# - task: CopyFiles@2
#   inputs:
#     Contents: '**/*.apk'
#     TargetFolder: '$(build.artifactStagingDirectory)'
# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'drop'
#     publishLocation: 'Container'


